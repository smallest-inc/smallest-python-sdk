# coding: utf-8

"""
    Agent Management API

    API for managing agents, their templates, and call logs

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from smallestai.atoms.models.get_campaigns200_response import GetCampaigns200Response

class TestGetCampaigns200Response(unittest.TestCase):
    """GetCampaigns200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetCampaigns200Response:
        """Test GetCampaigns200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetCampaigns200Response`
        """
        model = GetCampaigns200Response()
        if include_optional:
            return GetCampaigns200Response(
                status = True,
                data = [
                    atoms_client.models.get_campaigns_200_response_data_inner.getCampaigns_200_response_data_inner(
                        _id = '', 
                        name = '', 
                        description = '', 
                        organization = '', 
                        agent_id = '', 
                        created_by = '', 
                        audience_id = '', 
                        participants_count = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_campaign_in_progress = True, 
                        is_campaign_completed = True, )
                    ]
            )
        else:
            return GetCampaigns200Response(
        )
        """

    def testGetCampaigns200Response(self):
        """Test GetCampaigns200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
